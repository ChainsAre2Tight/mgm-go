package mgmgo_test

import (
	"encoding/hex"
	"testing"

	mgmgo "github.com/ChainsAre2Tight/mgm-go"
)

func BenchmarkEncryptor(b *testing.B) {
	key := "8899AABBCCDDEEFF0011223344556677FEDCBA98765432100123456789ABCDEF"
	plaintext := []byte{
		0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x00, 0xFF, 0xEE, 0xDD, 0xCC, 0xBB, 0xAA, 0x99, 0x88,
		0x00, 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xEE, 0xFF, 0x0A,
		0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xEE, 0xFF, 0x0A, 0x00,
		0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88, 0x99, 0xAA, 0xBB, 0xCC, 0xEE, 0xFF, 0x0A, 0x00, 0x11,
		0xAA, 0xBB, 0xCC,
	}
	associatedData := []byte{
		0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
		0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03,
		0xEA, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05, 0x05,
	}

	k, err := hex.DecodeString(key)
	if err != nil {
		b.Fatalf("Error during key decoding: %s", err)
	}
	e, err := mgmgo.New(k)
	if err != nil {
		b.Fatalf("Error during initialization: %s", err)
	}
	for b.Loop() {
		_ = e.Seal(nil, Nonce, plaintext, associatedData)
	}
}
